name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.19']
      # fail-fast: false
    env:
      GOPATH: /home/runner/work/omg/gopath
      GOCACHE: /home/runner/work/omg/.cache/go-build

    name: Go ${{ matrix.go }} sample
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v2

      - name: mkdir
        run: mkdir -p $GOCACHE $GOPATH

      - uses: actions/cache@v2
        with:
          path: |
            ~/work/omg/gopath
            ~/work/omg/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}

      - name: go version
        run: go version

      - name: sudo go version
        run: sudo go version

      - name: sudo go version (from GOROOT)
        run: sudo $GOROOT/bin/go version

      - name: sudo goenv (from GOROOT) sudo GOCACHE=${{env.GOCACHE}} GOPATH=${{env.GOPATH}} go env
        run: sudo GOCACHE=$GOCACHE GOPATH=$GOPATH $GOROOT/bin/go env

      - name: chown cache
        run: sudo chown -R runner:docker $GOPATH $GOCACHE

      - name: Build root
        run: sudo GOCACHE=$GOCACHE GOPATH=$GOPATH $GOROOT/bin/go build -v .

      - name: Test root
        run: sudo GOCACHE=$GOCACHE GOPATH=$GOPATH $GOROOT/bin/go test -v ./...

      - name: chown cache
        run: sudo chown -R runner:docker $GOPATH $GOCACHE

#      - name: Test
#        run: GOCACHE=$GOCACHE GOPATH=$GOPATH go test ./...
